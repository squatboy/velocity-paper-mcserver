{
  "connection_flow": [
    {
      "step": 2,
      "trigger": "Client opens TCP on port 25565",
      "action": "Connect",
      "service": "Proxy EC2",
      "config": {
        "listener": "TCP 25565",
        "stickiness": "Source-IP"
      },
      "result": "Handled by Velocity proxy"
    },
    {
      "step": 4,
      "trigger": "Velocity receives packet",
      "action": "Proxy routing",
      "logic": "Based on Lobby/Wild/Village target selection",
      "result": "Forward to appropriate Paper Server EC2 on internal port"
    },
    {
      "step": 5,
      "trigger": "Paper Server EC2 receives proxied packet",
      "action": "Minecraft session handling",
      "service": "itzg/minecraft-server",
      "port": "SERVER_PORT (2550X)",
      "storage": {
        "path": "/data",
        "volume": "EBS GP3 200GB",
        "filesystem": "ext4 로컬 블록 스토리지"
      }
    }
  ],
  "background_tasks": [
    {
      "name": "Host metrics",
      "tool": "CloudWatch Agent",
      "metrics": [
        "CPU",
        "Memory",
        "Network"
      ]
    },
    {
      "name": "Container metrics & logs",
      "tool": "Container Insights",
      "metrics": [
        "docker_stats.cpu",
        "docker_stats.memory",
        "docker_stats.blkio"
      ],
      "logs": [
        "stdout",
        "stderr"
      ]
    },
    {
      "name": "Alerts",
      "tool": "CloudWatch Alarms → Discord webhook",
      "triggers": {
        "cpu": ">=80%",
        "memory": ">=90%",
        "disk": ">=70%",
        "container_exit": true
      }
    },
    {
      "name": "Auto-recovery",
      "trigger": "Container EXIT event",
      "action": "EventBridge → SSM Run Command",
      "command": "docker restart $CONTAINER_ID"
    },
    {
      "name": "Backup",
      "schedule": "Every 1 hour",
      "tool": "AWS Data Lifecycle Manager",
      "retention": "Keep 2 latest snapshots (2시간 커버)",
      "description": "EBS 스냅샷 자동 생성, 실시간 게임 환경 대응, 증분 백업으로 비용 효율적"
    }
  ]
}